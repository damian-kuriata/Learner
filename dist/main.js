(()=>{"use strict";var t,e=new Uint8Array(16);function n(){if(!t&&!(t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(e)}const i=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,s=function(t){return"string"==typeof t&&i.test(t)};for(var r=[],a=0;a<256;++a)r.push((a+256).toString(16).substr(1));const o=function(t,e,i){var a=(t=t||{}).random||(t.rng||n)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,e){i=i||0;for(var o=0;o<16;++o)e[i+o]=a[o];return e}return function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=(r[t[e+0]]+r[t[e+1]]+r[t[e+2]]+r[t[e+3]]+"-"+r[t[e+4]]+r[t[e+5]]+"-"+r[t[e+6]]+r[t[e+7]]+"-"+r[t[e+8]]+r[t[e+9]]+"-"+r[t[e+10]]+r[t[e+11]]+r[t[e+12]]+r[t[e+13]]+r[t[e+14]]+r[t[e+15]]).toLowerCase();if(!s(n))throw TypeError("Stringified UUID is invalid");return n}(a)};class l{constructor(t,e,n=null){this.originalText=t,this.translatedText=e,this.id=n??o().toString().substr(0,5)}checkTranslation(t,e){if((t=t.toLowerCase().trim()).replaceAll("ä","ae"),t.replaceAll("ö","oe"),t.replaceAll("ü","ue"),t.replaceAll("ß","ss"),"to"!==e&&"from"!==e)throw new Error("Wrong direction");let n=this;return n.translatedText=n.translatedText.toLowerCase().trim(),n.translatedText.replaceAll("ä","ae"),n.translatedText.replaceAll("ö","oe"),n.translatedText.replaceAll("ü","ue"),n.translatedText.replaceAll("ß","ss"),n.originalText=n.originalText.toLowerCase().trim(),n.originalText.replaceAll("ä","ae"),n.originalText.replaceAll("ö","oe"),n.originalText.replaceAll("ü","ue"),n.originalText.replaceAll("ß","ss"),"to"===e?t===n.originalText:t===n.translatedText}static localStorageTag="learner_data";static loadFromStorage(t=!0,e=null){let n=JSON.parse(localStorage.getItem(l.localStorageTag));if(!n||0===n.length)return[];let i=n;if(i instanceof Array==0)throw new Error("Data must be array!");let s=i.map((t=>new l(t.originalText,t.translatedText,t.id)));if(t)return s;if(e)return s.find((t=>t.id===e));const r=s.length;return s[Math.floor(Math.random()*(r-0)+0)]}static saveToStorage(t){if(!(t instanceof l))throw new Error("Instance of Phrase required!");let e=l.loadFromStorage(),n=!1;for(let i=0;i<e.length;i++)e[i].id===t.id&&(e[i].originalText=t.originalText,e[i].translatedText=t.translatedText,n=!0);n||e.push(t);let i=JSON.stringify(e);localStorage.setItem(l.localStorageTag,i)}static removeFromStorage(t){let e=l.loadFromStorage(),n=e.findIndex((e=>e.id===t));if(-1===n)throw new Error("Phrase not found");e.splice(n,1),localStorage.setItem(l.localStorageTag,JSON.stringify(e))}}const h={hiddenClassName:"hidden",hide(){if(!(this.container instanceof Element))throw new Error("In order to use hide and show, container property must be Element.");this.container.classList.add(this.hiddenClassName)},show(){if(!(this.container instanceof Element))throw new Error("In order to use hide and show, container property must exist.");this.container.classList.remove(this.hiddenClassName)}};class c{#t;#e;constructor(t,e="",n=""){if(this.originalText=e,this.translatedText=n,this.#t=t,this.#e=!1,t){this.container=document.querySelector("#phrase-input-dialog"),this.originalTextInput=document.querySelector("#original-text-input"),this.translatedTextInput=document.querySelector("#translated-text-input"),this.confirmButton=document.querySelector(".dialog-confirm-btn"),this.cancelButton=document.querySelector(".dialog-cancel-btn"),this.closeButton=document.querySelector(".dialog-close-btn"),this.originalTextInput.value=e,this.translatedTextInput.value=n;for(let e in t)this[e]&&(this[e]instanceof HTMLButtonElement?this[e].onclick=t[e]:(this[e].onchange=t[e],console.log(this[e])))}}setOriginalTextValue(t){if(!this.originalTextInput)throw new Error("No text input present");this.originalText=t,this.originalTextInput.value=t}setTranslatedTextValue(t){if(!this.translatedTextInput)throw new Error("No text input present");this.translatedText=t,this.translatedTextInput.value=t}destroy(){for(let t in this){if("container"===t)continue;let e;t.endsWith("Input")?e="change":t.endsWith("Button")&&(e="click"),this[t].removeEventListener(e,this.#t[t])}}set inEdit(t){this.#e=t}get inEdit(){return this.#e}}class d{#n;constructor(t,e=!0,n=1e4){this.container=document.querySelector("#toast"),console.log(this.container),this.#n=t,this.container.textContent=t,this.shown=!1,e&&this.show(),this.timeout=n}show(){this.shown||(this.shown=!0,this.container.classList.add("toast-shown"),console.log("show"),setTimeout(this.onTimeout.bind(this),1e4))}onTimeout(){console.log("timeout"),this.container.classList.remove("toast-shown",this.timeout),this.shown=!1}set text(t){this.#n=t,this.container.textContent=t}get text(){return this.#n}}class u{constructor(t,e,n){this.listElement=t,this.onDelete=e,this.onEdit=n,this.refresh(l.loadFromStorage())}refresh(t){for(this.phrases=t;this.listElement.firstChild;)this.listElement.removeChild(this.listElement.firstChild);this.phrases.forEach(((t,e)=>{let n=document.createElement("li");const i=t.id;n.setAttribute("id","phrase"+i),n.innerHTML=`\n        <div>\n        ${e+1}.${t.originalText}\n\n        </div>\n      `;const s=document.createElement("button");s.classList.add("edit-button"),s.setAttribute("id","edit"+i),s.addEventListener("click",(e=>{e.target.getAttribute("id").slice(4),console.log("Before: ",t),this.onEdit(t)})),s.textContent="Edit";const r=document.createElement("button");r.classList.add("delete-button"),r.setAttribute("id","delete"+i),r.addEventListener("click",(()=>{const e=r.getAttribute("id").slice(6);console.log("Delete id: ",e),this.onDelete(t.id)})),r.textContent="X",r.setAttribute("aria-label","Delete phrase"),n.appendChild(s),n.appendChild(r),this.listElement.appendChild(n)}))}}class g{constructor(t){this.container=t,this.currentPhrase=null,this.translationDirection,this.translatedPhrase=document.querySelector("#translated-phrase"),this.learnPhraseInput=document.querySelector("#learn-phrase-input"),this.resultText=document.querySelector("#result-text"),this.checkButton=document.querySelector("#check-btn"),this.checkButton.addEventListener("click",(()=>{this.currentPhrase&&this.checkInput()})),this.nextButton=document.querySelector("#next-btn"),this.nextButton.addEventListener("click",(()=>{this.processOnePhrase()}))}processOnePhrase(){if(this.learnPhraseInput.value="",this.resultText.textContent="",this.translationDirection=Math.floor(2*Math.random())+0,this.translationDirection=0===this.translationDirection?"to":"from",this.currentPhrase=l.loadFromStorage(!1),this.currentPhrase instanceof Array)return this.translatedPhrase.textContent="At first add phrases!",void(this.currentPhrase=null);"to"===this.translationDirection?this.translatedPhrase.textContent=this.currentPhrase.translatedText:this.translatedPhrase.textContent=this.currentPhrase.originalText}checkInput(){let t=this.learnPhraseInput.value;this.currentPhrase.checkTranslation(t,this.translationDirection)?this.#i():this.#s()}#i(){this.processOnePhrase()}#s(){this.resultText.textContent="Wrong, correct answer: ","to"===this.translationDirection?this.resultText.textContent+=this.currentPhrase.originalText:this.resultText.textContent+=this.currentPhrase.translatedText,this.resultText.classList.add("feedback-incorrect")}}let p=document.querySelector(".nav-btn:first-child"),T=document.querySelector(".nav-btn:nth-child(2)"),x=document.querySelector("#learn-pane"),m=document.querySelector("#manage-pane");Object.assign(g.prototype,h);let w=new g(x),f=new class{constructor(t){new d("Hello",!0,1e4),this.newOriginalText="",this.newTranslatedText="",this.phraseEdited=null,this.container=t,this.onNewOriginalTextChange=this.onNewOriginalTextChange.bind(this),this.onNewTranslatedTextChange=this.onNewTranslatedTextChange.bind(this),this.onPhraseEdit=this.onPhraseEdit.bind(this),this.onPhraseDelete=this.onPhraseDelete.bind(this),this.onConfirm=this.onConfirm.bind(this),this.onClose=this.onClose.bind(this);const e={originalTextInput:this.onNewOriginalTextChange,translatedTextInput:this.onNewTranslatedTextChange,closeButton:this.onClose,confirmButton:this.onConfirm,cancelButton:this.onClose};this.phraseInputDialog=new c(e),Object.assign(this.phraseInputDialog,h),this.phraseList=new u(document.querySelector(".phrases-list"),this.onPhraseDelete,this.onPhraseEdit),this.newButton=document.querySelector("#new-button"),this.newButton.addEventListener("click",(()=>{this.phraseInputDialog.show(),this.newButton.disabled=!0}))}onPhraseDelete(t){l.removeFromStorage(t),this.phraseList.refresh(l.loadFromStorage())}onPhraseEdit(t){this.phraseEdited=t,console.log("Phrae in edit: ",t),this.newOriginalText=t.originalText,this.newTranslatedText=t.translatedText,this.phraseInputDialog.show(),this.phraseInputDialog.setOriginalTextValue(t.originalText),this.phraseInputDialog.setTranslatedTextValue(t.translatedText)}onNewOriginalTextChange(t){console.log("Orig:",t.target.value),this.newOriginalText=t.target.value}onNewTranslatedTextChange(t){console.log("trans: ",t.target.value),this.newTranslatedText=t.target.value}onConfirm(){let t;console.log(this.newOriginalText),console.log(this.newOriginalText,this.newTranslatedText),t=this.phraseEdited?new l(this.newOriginalText,this.newTranslatedText,this.phraseEdited.id):new l(this.newOriginalText,this.newTranslatedText),console.log("To save: ",t),l.saveToStorage(t),this.phraseList.refresh(l.loadFromStorage()),this.phraseInputDialog.setTranslatedTextValue(""),this.phraseInputDialog.setOriginalTextValue(""),this.newOriginalText="",this.newTranslatedText=""}onClose(){this.#r()}#r(){this.phraseInputDialog.hide(),this.phraseInputDialog.setTranslatedTextValue(""),this.phraseInputDialog.setOriginalTextValue(""),this.newOriginalText="",this.newTranslatedText="",this.newButton.disabled=!1,this.phraseEdited=null}}(m);Object.assign(f,h);let v="learning";p.addEventListener("click",(()=>{"learning"!==v&&(v="learning",w.show(),f.hide(),p.classList.add("active-nav-btn"),T.classList.remove("active-nav-btn"),w.processOnePhrase())})),T.addEventListener("click",(()=>{"manage"!==v&&(v="manage",f.show(),w.hide(),T.classList.add("active-nav-btn"),p.classList.remove("active-nav-btn"))})),w.processOnePhrase()})();